对zabbix数据库做表分区（按天）
web页面关闭Housekeeper
Administrattion（管理）――>General――>Housekeeper，去掉History和Trends选项的勾选状态，可关闭History，Trends，Housekeeper功能，
mysql，zabbix数据库分表脚本  https://github.com/Kingserch/dir/tree/master/Zabbix/scripts/partitiontables_zabbix-master
因为是生产环境，history trends表中数据较大，所以需要先清空在执行脚本
清空语句如下：
mysql> use zabbix; 
mysql> truncate table history; 
mysql> optimize table history; 
mysql> truncate table history_str; 
mysql> optimize table history_str; 
mysql> truncate table history_uint; 
mysql> optimize table history_uint; 
mysql> truncate table history_log; 
mysql> optimize table history_log; 
mysql> truncate table history_text; 
mysql> optimize table history_text; 
mysql> truncate table trends; 
mysql> optimize table trends; 
mysql> truncate table trends_uint; 
mysql> optimize table trends_uint; 

运行表分区脚本，为防止网络中断后引起脚本运行中断导致数据库故障，我们用screen后台执行的方式
yum install screen -y 
screen  -R  zabbix
授权脚本执行权限，执行脚本完成后，提示mysql: [Warning] Using a password on the command line interface can be insecure 暂时忽略
crontab -e 	#加入开机启动
1 0 * * *	/scripts/partitiontables_zabbix-master/partitiontables_zabbix.sh  #分时日月周 跟脚本路径
验证表分区是否成功，可以查看history表结构
mysql> show create table history\G		#G后面不需要加;否则会报错error:no query specified（未指定查询）
*************************** 1. row ***************************
       Table: history
Create Table: CREATE TABLE `history` (
  `itemid` bigint(20) unsigned NOT NULL,
  `clock` int(11) NOT NULL DEFAULT '0',
  `value` double(16,4) NOT NULL DEFAULT '0.0000',
  `ns` int(11) NOT NULL DEFAULT '0',
  KEY `history_1` (`itemid`,`clock`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin
/*!50100 PARTITION BY RANGE ( clock)
(PARTITION p20191105 VALUES LESS THAN (1572969599) ENGINE = InnoDB,
 PARTITION p20191106 VALUES LESS THAN (1573055999) ENGINE = InnoDB,
 PARTITION p20191107 VALUES LESS THAN (1573142399) ENGINE = InnoDB,
 PARTITION p20191108 VALUES LESS THAN (1573228799) ENGINE = InnoDB,
 PARTITION p20191109 VALUES LESS THAN (1573315199) ENGINE = InnoDB,
 PARTITION p20191110 VALUES LESS THAN (1573401599) ENGINE = InnoDB,
 PARTITION p20191111 VALUES LESS THAN (1573487999) ENGINE = InnoDB,
 PARTITION p20191112 VALUES LESS THAN (1573574399) ENGINE = InnoDB) */
1 row in set (0.00 sec)

mysql> 
mysql> select count(*) from history where clock > 1572969599 and clock <1572969599;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (0.00 sec)
mysql> select count(*) from history_uint where clock > 1572969599 and clock <1572969599;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (0.00 sec)
mysql> 

[root@s-30 ~]# date -d @1572969599 "+%Y-%m-%d"
2019-11-05
[root@s-30 ~]# date -d "2019-11-05" +%s
1572883200
[root@s-30 ~]# date -d @1572969599 "+%Y-%m-%d"
2019-11-05
[root@s-30 ~]# 
到此表分分区已经完成，这对提高数据库的性能具有重要的作用，对mysql的优化还可以通过调整其本身的配置参数来完成