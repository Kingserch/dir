邮件告警配置
登录zabbix-web页面，点击Administration->Media types->Create media type(在右上角)
创建用户，点击Administration->Users->Create user(在右上角)
创建action，点击configuration->actions->create action，创建action默认的参数为空
自定义脚本告警
自定义脚本在/etc/zabbix/zabbix_server.conf中，配置语句如下：
AlertScriptsPath=/etc/zabbix/alertscripts
电话告警，以Nexmo语音api为例，介绍如何配置语音电话
#!/usr/bin/env bash

#从Web页面传递6个参数
apiKey=$1    
apiSecret=$2
to=$3
text=$4
repeat=$5
from=$6

curl 'https://api.nexmo.com/tts/json' \
	-d "api_key=$apiKey" \        	#API的key
	-d "api_secret=$apiSecret" \  	#API的密钥
	-d "to=$to" \                 	#接收的号码
	-d "repeat=$repeat" \         	#重复的次数，非必需参数
	-d "from=$from" \             	#来源号码，非必需参数
	--data-urlencode "text=$text" 	#电话正文内容
微信告警
wget https://github.com/Kingserch/dir/blob/master/Zabbix/scripts/master.zip
mkdir wechat
cp wechat-alert-master/wechat_linux_amd64 wechat	#把下载的文件里面的linux版本移动到创建的目录中
chmod 755 /etc/zabbix/alertscripts/wechat/
chown zabbix:zabbix /etc/zabbix/alertscripts/wechat
/etc/zabbix/alertscripts/wechat --corpid=wxee***********81aa --corpsecret= Mm0mHwI8iVsjA*JUGySxOFMIlbosoVEkWIEiw --msg="您好</br>告警测试" --user=oneoaas --agentid=1000003
接下来我们在zabbix-web界面中配置微信告警，配置的参数如下
--corpid=wxee***********81aa 
--corpsecret=Mm0mHwI8iVsjA*JUGySxOFMIlbosoVEkWIEiw
--agentid=1000003
--user={ALERT.SENDTO}
--msg={ALERT.MESSAGE}
自定义邮件告警脚本
vim  /etc/zabbix/alertscripts/zabbix_sendmail.py   
#!/usr/bin/python 
#coding:utf-8 

import smtplib 
from email.mime.text import MIMEText 
import os 
import argparse
import logging
import datetime
 
mail_host = 'smtp.163.com' 
mail_user = 'monitor_itnihao' 
mail_pass = 'my_password'
mail_postfix = '163.com' 

def send_mail(mail_to,subject,content): 
    me = mail_user+"<"+mail_user+"@"+mail_postfix+">" 
    msg = MIMEText(content) 
    msg['Subject'] = subject 
    msg['From'] = me 
    msg['to'] = mail_to 
    global sendstatus
    global senderr
     
    try: 
        smtp = smtplib.SMTP() 
        smtp.connect(mail_host) 
        smtp.login(mail_user,mail_pass) 
        smtp.sendmail(me,mail_to,msg.as_string()) 
        smtp.close() 
        print 'send ok'
        sendstatus = True 
    except Exception,e: 
        senderr=str(e)
        print senderr
        sendstatus = False 
     
def logwrite(sendstatus,mail_to,content):
    logpath='/var/log/zabbix/alert'

    if not sendstatus:
        content = senderr

    if not os.path.isdir(logpath):
        os.makedirs(logpath)

    t=datetime.datetime.now()
    daytime=t.strftime('%Y-%m-%d')
    daylogfile=logpath+'/'+str(daytime)+'.log'
    logging.basicConfig(filename=daylogfile,level=logging.DEBUG)
    logging.info('*'*130)
    logging.debug(str(t)+' mail send to {0},content is :\n {1}'.format (mail_to,content))

if __name__ == "__main__": 
    parser = argparse.ArgumentParser(description='Send mail to user for zabbix alerting')
    parser.add_argument('mail_to',action="store", help='The address of the E-mail that send to user ')
    parser.add_argument('subject',action="store", help='The subject of the E-mail')
    parser.add_argument('content',action="store", help='The content of the E-mail')
    args = parser.parse_args()
    mail_to=args.mail_to
    subject=args.subject
    content=args.content

    send_mail(mail_to,subject,content)
    logwrite(sendstatus,mail_to,content)
注意上面这个脚本文件需要Zabbix用户具有执行权限，以确保脚本能正常运行。下面对脚本文件进行权限改变。

chmod  700  /etc/zabbix/alertscripts/zabbix_sendmail.py
chown  zabbix.zabbix  /etc/zabbix/alertscripts/zabbix_sendmail.py
使用脚本测试发送邮件。
python /etc/zabbix/alertscripts/zabbix_sendmail.py     
info@itnihao.com   test   "test to send mail"


如何取消告警发送
当大量告警无法正常发送时，告警会处于队列堆积状态，因此，我们可以手动关闭告警，使其不再发送。在数据库中，alerts表记录了即将发送的告警消息，其状态为1，表示待发送；状态为0，表示已发送，因此可以使用如下语句批量取消告警发送。
shell# mysql -uzabbix -pzabbix zabbix "update alerts set status='1' where status='0'"
如何删除故障信息
当Zabbix-Web界面中的故障信息，无法通过手动操作关闭故障的时候，我们还可以通过直接操作数据库进行删除。为了方便，可用笔者编写的脚本进行操作，如下所示：
#!/bin/bash

MYSQL_BIN=mysql       #MySQL的程序
MYSQL_USER=zabbix     #MySQL的用户名
MYSQL_PWD=zabbix      #MySQL的密码
MYSQL_PORT=3306       #MySQL的端口
MYSQL_HOST=127.0.0.1  #MySQL的IP
DB_NAME=zabbix        #数据库名称
MYSQL_LOGIN="${MYSQL_BIN} -u${MYSQL_USER} -p${MYSQL_PWD} -h${MYSQL_HOST} -P${MYSQL_PORT} ${DB_NAME}"
triggerids="13614 13684" #此处填写需要被删除的故障的triggerid
for ID in ${triggerids};do
	echo "------------------------------------------------------"
	echo "update zabbix.triggers set value=0 where triggerid=${ID} and value=1"
	${MYSQL_LOGIN} -e "update zabbix.triggers set value=0 where triggerid=${ID} and value=1" 2>&1 | grep -v "Warning: Using a password"
	echo "delete from zabbix.events where objectid=${ID} and object=0"
	${MYSQL_LOGIN} -e "delete from zabbix.events where objectid=${ID} and object=0" 2>&1 | grep -v "Warning: Using a password"
#4.0版本还需要清理problem表的数据记录
	${MYSQL_LOGIN} -e "delete from zabbix.problem where objectid=${ID} and object=0" 2>&1 | grep -v "Warning: Using a password"
  echo ""
done

